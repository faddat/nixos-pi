name: nix-build-on-demand-docker

on:
  workflow_dispatch:
    inputs:
      nixpkgs_url:
        description: "URL to nixpkgs tarball"
        default: "https://channels.nixos.org/nixos-25.05/nixexprs.tar.xz"
      rpi_nix_url:
        description: "Flake reference for raspberry-pi-nix"
        default: "github:nix-community/raspberry-pi-nix"
      environmentName:
        description: "Configuration name (matches configuration.<name>.sdImage.nix)"
        required: true
        default: "default"

jobs:
  build-image:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        envName: [ "${{ github.event.inputs.environmentName }}" ]
    environment: ${{ matrix.envName }}
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=${{ github.event.inputs.nixpkgs_url }}
          extra_nix_config: |
            extra-platforms = aarch64-linux
      - name: Register QEMU binfmt
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Build SD Image
        run: |
          if [ "${{ matrix.envName }}" = "default" ]; then
            CONFIG_FILE=configuration.default.sdImage.nix
          else
            echo "${{ secrets.CONFIGURATION_NIX }}" > configuration.custom.sdImage.nix
            CONFIG_FILE=configuration.custom.sdImage.nix
          fi

          nix-build '<nixpkgs/nixos>' \
            -A config.system.build.sdImage \
            -I nixos-config=./$CONFIG_FILE \
            --argstr system aarch64-linux \
            --option sandbox false
      - uses: actions/upload-artifact@v2
        with:
          name: sd-image-${{ matrix.envName }}.img
          path: ./result/sd-image/*.img*
